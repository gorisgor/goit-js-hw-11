{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["const URL = 'https://pixabay.com/ai/';\n\nlet userRequest = '';\nconst searchParams = new URLSearchParams({\n  key: '43757696-1a32682a4096c08080d446579',\n  q: userRequest,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n});\n\nfunction fetchImages(searchParams) {\n  return fetch(`${URL}?${searchParams}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Не вдалося виконати запит до API Pixabay');\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.error('Помилка при отриманні зображень:', error);\n      throw error;\n    });\n}\n\nfunction onSearch(event) {\n  event.preventDefault();\n  const form = event.currentTarget;\n  userRequest = form.elements.query.value;\n  if (userRequest !== '') {\n    searchParams.set('q', userRequest);\n    loader.classList.remove('is-hidden');\n    fetchImages(searchParams)\n      .then(renderImageCards)\n      .catch(onFetchError)\n      .finally(() => {\n        form.reset();\n        loader.classList.add('is-hidden');\n      });\n  } else {\n    alert('Plese type your request');\n  }\n}\n\nconst gallery = document.querySelector('.gallery');\nconst searchForm = document.querySelector('.form');\nconst loader = document.querySelector('.loader');\n\nsearchForm.addEventListener('submit', onSearch);\n\nfunction renderImageCards(data) {\n  gallery.innerHTML = '';\n  data.hits.forEach(image => {\n    const { webformatURL, tags, likes, views, comments, downloads } = image;\n    const markup = `<div class=\"card\">\n            <div class=\"card-img-top\">\n                <img src=\"${webformatURL}\" alt=\"${tags}\">\n            </div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">Likes: ${likes}</p>\n                <p class=\"card-text\">Views: ${views}</p>\n                <p class=\"card-text\">Comments: ${comments}</p>\n                <p class=\"card-text\">Downloads: ${downloads}</p>\n            </div>\n        </div>`;\n    gallery.insertAdjacentHTML('beforeend', markup);\n  });\n}\n\nfunction onFetchError(error) {\n  alert(error);\n}\n"],"names":["URL","userRequest","searchParams","fetchImages","response","error","onSearch","event","form","loader","renderImageCards","onFetchError","gallery","searchForm","data","image","webformatURL","tags","likes","views","comments","downloads","markup"],"mappings":"ssBAAA,MAAMA,EAAM,0BAEZ,IAAIC,EAAc,GAClB,MAAMC,EAAe,IAAI,gBAAgB,CACvC,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACd,CAAC,EAED,SAASE,EAAYD,EAAc,CACjC,OAAO,MAAM,GAAGF,CAAG,IAAIE,CAAY,EAAE,EAClC,KAAKE,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,0CAA0C,EAE5D,OAAOA,EAAS,MACtB,CAAK,EACA,MAAMC,GAAS,CACd,cAAQ,MAAM,mCAAoCA,CAAK,EACjDA,CACZ,CAAK,CACL,CAEA,SAASC,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpB,MAAMC,EAAOD,EAAM,cACnBN,EAAcO,EAAK,SAAS,MAAM,MAC9BP,IAAgB,IAClBC,EAAa,IAAI,IAAKD,CAAW,EACjCQ,EAAO,UAAU,OAAO,WAAW,EACnCN,EAAYD,CAAY,EACrB,KAAKQ,CAAgB,EACrB,MAAMC,CAAY,EAClB,QAAQ,IAAM,CACbH,EAAK,MAAK,EACVC,EAAO,UAAU,IAAI,WAAW,CACxC,CAAO,GAEH,MAAM,yBAAyB,CAEnC,CAEA,MAAMG,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAa,SAAS,cAAc,OAAO,EAC3CJ,EAAS,SAAS,cAAc,SAAS,EAE/CI,EAAW,iBAAiB,SAAUP,CAAQ,EAE9C,SAASI,EAAiBI,EAAM,CAC9BF,EAAQ,UAAY,GACpBE,EAAK,KAAK,QAAQC,GAAS,CACzB,KAAM,CAAE,aAAAC,EAAc,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,EAAGN,EAC5DO,EAAS;AAAA;AAAA,4BAESN,CAAY,UAAUC,CAAI;AAAA;AAAA;AAAA,8CAGRC,CAAK;AAAA,8CACLC,CAAK;AAAA,iDACFC,CAAQ;AAAA,kDACPC,CAAS;AAAA;AAAA,gBAGvDT,EAAQ,mBAAmB,YAAaU,CAAM,CAClD,CAAG,CACH,CAEA,SAASX,EAAaN,EAAO,CAC3B,MAAMA,CAAK,CACb"}